// ===== √Åp d·ª•ng giao di·ªán theo c√†i ƒë·∫∑t hi·ªán t·∫°i =====
(function applyDashboardTheme() {
  const logo = localStorage.getItem("sidebarLogo");
  const color = localStorage.getItem("themeColor") || "#1e88e5";
  const logoImg = document.getElementById("sidebarLogo");
  if (logo && logoImg) logoImg.src = logo;
  document.documentElement.style.setProperty("--primary", color);
})();

// ===== N·∫°p c√†i ƒë·∫∑t =====
const settings = JSON.parse(localStorage.getItem("settings") || "{}");
if (settings.storeName)
  document.getElementById("storeName").value = settings.storeName;
if (settings.currency)
  document.getElementById("currency").value = settings.currency;
if (settings.apiUrl) document.getElementById("apiUrl").value = settings.apiUrl;

// ===== L∆∞u c√†i ƒë·∫∑t =====
document.getElementById("btnSaveSettings").addEventListener("click", () => {
  const data = {
    storeName: document.getElementById("storeName").value.trim(),
    currency: document.getElementById("currency").value,
    apiUrl: document.getElementById("apiUrl").value.trim(),
  };
  localStorage.setItem("settings", JSON.stringify(data));
  showToast("üíæ ƒê√£ l∆∞u c·∫•u h√¨nh th√†nh c√¥ng!", "success");
});

// ===== Ki·ªÉm tra k·∫øt n·ªëi API =====
document.getElementById("btnTestAPI").addEventListener("click", async () => {
  const apiUrl = document.getElementById("apiUrl").value.trim();
  if (!apiUrl) return showToast("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ API!", "warning");

  try {
    const res = await fetch(`${apiUrl}/ping`);
    if (res.ok) showToast("‚úÖ K·∫øt n·ªëi API th√†nh c√¥ng!", "success");
    else showToast("‚ö†Ô∏è API ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá!", "warning");
  } catch {
    showToast("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi API!", "danger");
  }
});

// ===== Thay ƒë·ªïi m√†u giao di·ªán =====
document.getElementById("themeColor").addEventListener("input", (e) => {
  const color = e.target.value;
  localStorage.setItem("themeColor", color);
  document.documentElement.style.setProperty("--primary", color);
  showToast("üé® ƒê√£ c·∫≠p nh·∫≠t m√†u giao di·ªán!", "success");
});

// ===== Upload logo sidebar =====
document.getElementById("logoUpload").addEventListener("change", (e) => {
  const file = e.target.files[0];
  if (!file) return;
  const reader = new FileReader();
  reader.onload = function (event) {
    const base64 = event.target.result;
    localStorage.setItem("sidebarLogo", base64);
    document.getElementById("sidebarLogo").src = base64;
    showToast("üñºÔ∏è ƒê√£ thay ƒë·ªïi logo sidebar!", "success");
  };
  reader.readAsDataURL(file);
});

// ===== Kh√¥i ph·ª•c m·∫∑c ƒë·ªãnh =====
document.getElementById("btnResetSettings").addEventListener("click", () => {
  if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën kh√¥i ph·ª•c m·∫∑c ƒë·ªãnh?")) return;
  localStorage.removeItem("settings");
  localStorage.removeItem("themeColor");
  localStorage.removeItem("sidebarLogo");
  showToast("üîÑ ƒê√£ kh√¥i ph·ª•c m·∫∑c ƒë·ªãnh!", "warning");
  setTimeout(() => location.reload(), 1000);
});

// ===== Toast =====
function showToast(msg, type = "info") {
  const container = document.getElementById("toastContainer");
  const el = document.createElement("div");
  const color =
    type === "success"
      ? "bg-success"
      : type === "warning"
      ? "bg-warning text-dark"
      : type === "danger"
      ? "bg-danger"
      : "bg-primary";

  el.className = `toast text-white ${color} animate__animated animate__fadeInDown`;
  el.innerHTML = `<div class="toast-body fw-semibold">${msg}</div>`;
  container.appendChild(el);
  const toast = new bootstrap.Toast(el, { delay: 3000 });
  toast.show();
  el.addEventListener("hidden.bs.toast", () => el.remove());
}

/* ------------------------------------------------------------------ */
/*            H√ÄNG T·ªíN TH·∫§P: ·∫¢nh + Ph√¢n trang + Hi·ªáu ·ª©ng ƒë·∫øm          */
/* ------------------------------------------------------------------ */
let lowStockList = [];
let lowCurrentPage = 1;
const lowLimit = 5;

// Nh·∫•n "Hi·ªÉn th·ªã h√†ng t·ªìn th·∫•p"
document
  .getElementById("btnShowLowStock")
  .addEventListener("click", async () => {
    showToast("üîÑ ƒêang t·∫£i d·ªØ li·ªáu h√†ng t·ªìn kho...", "info");

    // Fade-out nh·∫π ƒë·ªÉ m∆∞·ª£t m·∫Øt
    document.body.classList.add("animate__animated", "animate__fadeOut");

    setTimeout(async () => {
      const api =
        JSON.parse(localStorage.getItem("settings") || "{}").apiUrl ||
        "http://localhost:3000/api";
      const tbody = document.getElementById("lowStockBody");
      tbody.innerHTML = `<tr><td colspan="9" class="text-muted py-3"><i class="bi bi-hourglass-split me-1"></i> ƒêang t·∫£i d·ªØ li·ªáu...</td></tr>`;

      try {
        const res = await fetch(`${api}/products`);
        const data = await res.json();
        if (!res.ok || !Array.isArray(data.data)) throw new Error();

        const threshold =
          Number(document.getElementById("lowStockThreshold").value) || 5;
        lowStockList = data.data.filter((p) => p.quantity < threshold);
        lowCurrentPage = 1;

        renderLowStockPage();

        const totalLow = lowStockList.length;
        document.getElementById("btnExportLowStock").disabled = totalLow === 0;
        animateCounter("lowStockCounter", totalLow, 600);

        if (totalLow > 0)
          showToast(
            `üì¶ C√≥ ${totalLow} s·∫£n ph·∫©m t·ªìn th·∫•p (d∆∞·ªõi ${threshold})`,
            "warning"
          );
        else showToast("üéâ T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ƒë·ªß h√†ng!", "success");

        // Fade-in l·∫°i sau khi t·∫£i xong
        document.body.classList.remove("animate__fadeOut");
        document.body.classList.add("animate__fadeIn");
      } catch {
        tbody.innerHTML = `<tr><td colspan="9" class="text-danger py-3">‚ùå Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu.</td></tr>`;
        showToast("L·ªói khi t·∫£i danh s√°ch s·∫£n ph·∫©m.", "danger");
        document.body.classList.remove("animate__fadeOut");
      }
    }, 500);
  });

// Render 1 trang c·ªßa danh s√°ch t·ªìn th·∫•p (c√≥ ·∫£nh)
function renderLowStockPage() {
  const tbody = document.getElementById("lowStockBody");
  if (!lowStockList.length) {
    tbody.innerHTML = `<tr><td colspan="9" class="text-success py-3">üéâ T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ƒë·ªß h√†ng!</td></tr>`;
    document.getElementById("lowStockInfo").textContent = "";
    document.getElementById("lowPageInfo").textContent = "Trang 0/0";
    document.getElementById("lowPrev").disabled = true;
    document.getElementById("lowNext").disabled = true;
    return;
  }

  const start = (lowCurrentPage - 1) * lowLimit;
  const end = start + lowLimit;
  const pageData = lowStockList.slice(start, end);

  tbody.innerHTML = pageData
    .map(
      (p, i) => `
    <tr class="animate__animated animate__fadeIn">
      <td>${start + i + 1}</td>
      <td><img src="${
        p.image
      }" class="rounded shadow-sm" width="70" height="55" alt="${p.name}"/></td>
      <td class="text-start fw-semibold">${p.name}</td>
      <td>${p.vehicle}</td>
      <td>${p.model}</td>
      <td>${p.category}</td>
      <td>${p.price?.toLocaleString("vi-VN")} ‚Ç´</td>
      <td class="text-danger fw-bold">${p.quantity}</td>
      <td>${new Date(p.createdAt).toLocaleDateString("vi-VN")}</td>
    </tr>
  `
    )
    .join("");

  const totalPages = Math.ceil(lowStockList.length / lowLimit);
  document.getElementById(
    "lowPageInfo"
  ).textContent = `Trang ${lowCurrentPage}/${totalPages}`;
  document.getElementById("lowPrev").disabled = lowCurrentPage <= 1;
  document.getElementById("lowNext").disabled = lowCurrentPage >= totalPages;
  document.getElementById(
    "lowStockInfo"
  ).innerHTML = `${lowStockList.length} s·∫£n ph·∫©m t·ªìn th·∫•p`;

  // C·∫£nh b√°o khung khi c√≥ s·∫£n ph·∫©m <=2
  const box = tbody.closest("div.table-responsive");
  if (lowStockList.some((p) => p.quantity <= 2)) {
    box.style.borderColor = "#dc3545";
    box.style.boxShadow = "0 0 0.6rem rgba(220,53,69,0.4)";
  } else {
    box.style.borderColor = "#ddd";
    box.style.boxShadow = "none";
  }
}

// Ph√¢n trang
document.getElementById("lowPrev").addEventListener("click", () => {
  if (lowCurrentPage > 1) {
    lowCurrentPage--;
    renderLowStockPage();
  }
});
document.getElementById("lowNext").addEventListener("click", () => {
  const totalPages = Math.ceil(lowStockList.length / lowLimit);
  if (lowCurrentPage < totalPages) {
    lowCurrentPage++;
    renderLowStockPage();
  }
});

// Xu·∫•t Excel danh s√°ch t·ªìn th·∫•p (to√†n b·ªô danh s√°ch l·ªçc)
document.getElementById("btnExportLowStock").addEventListener("click", () => {
  if (!lowStockList.length)
    return showToast("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ xu·∫•t!", "warning");

  const data = lowStockList.map((p, i) => ({
    STT: i + 1,
    TenSanPham: p.name,
    HangXe: p.vehicle,
    DongXe: p.model,
    Loai: p.category,
    Gia: p.price?.toLocaleString("vi-VN"),
    TonKho: p.quantity,
    NgayNhap: new Date(p.createdAt).toLocaleDateString("vi-VN"),
  }));

  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.json_to_sheet(data);
  XLSX.utils.book_append_sheet(wb, ws, "HangTonThap");
  XLSX.writeFile(wb, "hang_ton_kho_thap.xlsx");
  showToast("üìÑ ƒê√£ xu·∫•t danh s√°ch h√†ng t·ªìn th·∫•p!", "success");
});

// Hi·ªáu ·ª©ng ƒë·∫øm s·ªë s·∫£n ph·∫©m t·ªìn th·∫•p
function animateCounter(elementId, target, duration) {
  let counter = document.getElementById(elementId);
  if (!counter) {
    counter = document.createElement("div");
    counter.id = elementId;
    counter.className =
      "fw-bold fs-4 text-primary text-center my-2 animate__animated animate__fadeIn";
    document
      .getElementById("lowStockInfo")
      .insertAdjacentElement("beforebegin", counter);
  }

  const start = 0;
  const stepTime = Math.abs(Math.floor(duration / (target || 1))) || 50;
  let current = start;
  counter.textContent = `üî¢ 0/${target} s·∫£n ph·∫©m t·ªìn th·∫•p`;

  const timer = setInterval(() => {
    current += 1;
    counter.textContent = `üî¢ ${Math.min(
      current,
      target
    )}/${target} s·∫£n ph·∫©m t·ªìn th·∫•p`;
    if (current >= target) {
      clearInterval(timer);
      counter.textContent = `üì¶ T·ªïng c·ªông ${target} s·∫£n ph·∫©m t·ªìn th·∫•p`;
    }
  }, stepTime);
}
(function mobileSidebarToggle(){
  const sidebar = document.querySelector('.sidebar');
  const overlay = document.getElementById('sidebarOverlay');
  const btn = document.getElementById('btnToggleSidebar');
  if (!sidebar || !btn || !overlay) return;

  const open = () => {
    sidebar.classList.add('open');
    overlay.classList.add('show');
    document.body.style.overflow = 'hidden'; // kh√≥a scroll n·ªÅn
  };
  const close = () => {
    sidebar.classList.remove('open');
    overlay.classList.remove('show');
    document.body.style.overflow = '';
  };

  btn.addEventListener('click', () => {
    sidebar.classList.contains('open') ? close() : open();
  });
  overlay.addEventListener('click', close);

  // ƒê√≥ng khi click 1 m·ª•c menu
  sidebar.querySelectorAll('a').forEach(a => {
    a.addEventListener('click', () => {
      if (window.innerWidth < 992) close();
    });
  });

  // ƒê√≥ng b·∫±ng ph√≠m ESC
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && sidebar.classList.contains('open')) close();
  });
})();
